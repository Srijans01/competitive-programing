# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def reverseBetween(self, head: ListNode, m: int, n: int) -> ListNode:
        if not head:
            return
        def reverse_list(node,length):
            head=node
            _next=prev=None
            i=0
            while(i<length):
                i+=1
                n=node.next
                node.next=prev
                prev=node
                node=n
            head.next=node
            return prev
        i=m-1
        h=node=ListNode(None)
        node.next=head
        while(i>0):
            node=node.next
            i-=1
        node.next=reverse_list(node.next,n-m+1)
        return h.next
